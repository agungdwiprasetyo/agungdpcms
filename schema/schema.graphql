schema {
    query: Query
    mutation: Mutation
}

type Query {
    chat: ChatModule
    resume: ResumeModule
}

type Mutation {
    chat: ChatModule
}

################### Resume Module Area
type ResumeModule {
    getAllResume(): Resumes
    getResumeBySlug(slug: String!): Resume
    createResume(resume: ResumeInput!): Resume
}

type Resume {
    id: ID!
    slug: String!
    name: String!
    achievements: [Achievement]!
}

type Resumes {
    data: [Resume]!
}

input ResumeInput {
    slug: String!
    name: String!
}

type Achievement {
    id: ID!
    resume_id: ID!
    name: String!
    appreciator: String!
    year: Int!
    picture: String!
}

type Achievements {
    data: [Achievement]!
}
################### End of Resume Module Area


################### Chat Module Area
type ChatModule {
    getAllMessage(groupId: Int!): ChatMessages
}
type ChatGroup {
    id: Int!
    name: String!
}
type ChatMessage {
    id: Int!
    clientId: String!
    event: String!
    title: String!
    content: String!
}
type ChatMessages {
    data: [ChatMessage]!
}