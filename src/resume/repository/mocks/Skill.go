// Code generated by mockery v1.0.0. DO NOT EDIT.

package mocks

import domain "github.com/agungdwiprasetyo/agungdpcms/src/resume/domain"
import mock "github.com/stretchr/testify/mock"

import shared "github.com/agungdwiprasetyo/agungdpcms/shared"

// Skill is an autogenerated mock type for the Skill type
type Skill struct {
	mock.Mock
}

// FindByResumeID provides a mock function with given fields: resumeID
func (_m *Skill) FindByResumeID(resumeID int) <-chan []*domain.Skill {
	ret := _m.Called(resumeID)

	var r0 <-chan []*domain.Skill
	if rf, ok := ret.Get(0).(func(int) <-chan []*domain.Skill); ok {
		r0 = rf(resumeID)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(<-chan []*domain.Skill)
		}
	}

	return r0
}

// Remove provides a mock function with given fields: data
func (_m *Skill) Remove(data *domain.Skill) shared.Result {
	ret := _m.Called(data)

	var r0 shared.Result
	if rf, ok := ret.Get(0).(func(*domain.Skill) shared.Result); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(shared.Result)
	}

	return r0
}

// Save provides a mock function with given fields: data
func (_m *Skill) Save(data *domain.Skill) shared.Result {
	ret := _m.Called(data)

	var r0 shared.Result
	if rf, ok := ret.Get(0).(func(*domain.Skill) shared.Result); ok {
		r0 = rf(data)
	} else {
		r0 = ret.Get(0).(shared.Result)
	}

	return r0
}
